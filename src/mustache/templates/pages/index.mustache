<!DOCTYPE html>
<html class="no-focus-outline">
  <head>
    <meta charset="utf-8">
    <title>Find and contact COVID hospitals in your city</title>
    {{#ogtags}}
    {{> ogtags}}
    {{/ogtags}}
    {{#favicons}}
    {{> favicons}}
    {{/favicons}}
    {{#fonts}}
    {{> fonts}}
    {{/fonts}}
    {{#gtag}}
    {{> gtag}}
    {{/gtag}}
    {{#pixel}}
    {{> pixel}}
    {{/pixel}}
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="css/main.css">

    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script type="text/javascript" src="js/index.js"></script>
    <script
      src="https://maps.googleapis.com/maps/api/js?key={{{googleMaps.apiKey}}}&callback=onMapAPILoaded&libraries=&v=weekly"
      defer
    ></script>
    <!-- The core Firebase JS SDK is always required and must be listed first -->
    <script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-analytics.js"></script>

    <script>
      // Your web app's Firebase configuration
      var firebaseConfig = {
        apiKey: "{{{firebase.apiKey}}}",
        authDomain: "{{{firebase.authDomain}}}",
        databaseURL: "{{{firebase.databaseURL}}}",
        projectId: "{{{firebase.projectId}}}",
        storageBucket: "{{{firebase.storageBucket}}}",
        messagingSenderId: "{{{firebase.messagingSenderId}}}",
        appId: "{{{firebase.appId}}}",
        measurementId: "{{{firebase.measurementId}}}"
      };
      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);
      firebase.analytics();
    </script>
    <script>
      (function(exports) {
        "use strict";

        var isMapAPILoaded = false;
        var mapMarkers = [];
        var MARKER_HOSPITAL_ICON = "/assets/icons/markers/hospital.png";
        var MARKER_LAB_ICON = "/assets/icons/markers/lab.png";
        var MARKER_UNKNOWN_ICON = "/assets/icons/markers/unknown.png";
        var MARKER_AVAILABLE_ICON = "/assets/icons/markers/available.png";
        var MARKER_UNAVAILABLE_ICON = "/assets/icons/markers/unavailable.png";
        
        function getQueryParams() {
          return JSON.parse('{"' + location.search.substring(1).replace(/&/g, '","').replace(/=/g,'":"') + '"}', function(key, value) { return key===""?value:decodeURIComponent(value) });
        }

        function toTitleCase(str) {
          return str.replace(/(?:^|\s)\w/g, function(match) {
            return match.toUpperCase();
          });
        }

        function hideAllUI() {
          $(".home-screen, .city-screen, .update-screen").hide();
        }

        function onCityClick(event) {
          event.preventDefault();
          gotoScreen($(this).attr("data-city"));
        }

        function initHomeScreen() {
          var cities = ["Bengaluru"];
          
          $(".navbar-brand").attr("href", "/");
          $(".navbar-title").text("Hospital Tracker");
          
          $(".city-url").off("click", onCityClick);
          $(".cities-ctr").empty();
          cities.forEach(function(city) {
            $(".cities-ctr").append("<a class=\"city-url\" href=\"/" + city.toLowerCase() + "\" data-city=\"" + city.toLowerCase() + "\">" + city + "<\a>");
          });
          $(".city-url").on("click", onCityClick);
        }
        
        function initCityScreen(cityName) {
          if (isMapAPILoaded) {
            $(".navbar-brand").attr("href", "/"+cityName);
            $(".navbar-title").text(toTitleCase(cityName));

            $(".map-nav-link").on("click", onMapNavLinkClick);

            initMapForCity(cityName);
          }
        }

        function reloadUI() {
          hideAllUI();
          var path = window.location.pathname.replace("/", "");
          
          if (path === "") {
            initHomeScreen();
            $(".home-screen").show();
          } else if (path === "update") {
            initUpdateScreen();
            $(".update-screen").show(getQueryParams()["id"]);
          } else {
            var cityName = path;
            initCityScreen(cityName);
            $(".city-screen").show();
          }
        }

        $(window).on("popstate", function(event) {
          reloadUI();
        });

        function gotoScreen(screen) {
          var url = screen === "home" ? "" : screen;
          history.pushState({}, "", url);
          reloadUI();
        }

        $(document).ready(function () {
          reloadUI();
        });

        function getPhoneNumber(text) {
          return text.replace(/\D/g,'');
        }

        function getPhoneNumberLink(text) {
          return "tel:" + getPhoneNumber(text);
        }

        function getGoogleMapsLink(lat, long, placeId) {
          return "https://www.google.com/maps/search/?api=1&query=" + lat + "," + long + "&query_place_id=" + placeId;
        }

        function getAddressKey(address) {
          address = address.replace(' ', '');
          [" ", "\\.", "#", "\\$", "\\[", "\\]", "/", "\\\\"].forEach(function(invalidCharacter) {
            var re = new RegExp(invalidCharacter, "g");
            address = address.replace(re, '');
          });
          return address;
        }

        function getMarkerUrl(path) {
          return document.location.origin + path;
        }

        function onMapNavLinkClick(event) {
          event.preventDefault();
          $(".map-nav-link").removeClass("active");
          $(this).addClass("active");
          var tabName = $(this).attr("data-name");
          switch(tabName) {
            case "all": showAllMarkers(); break;
            case "lab": showLabMarkers(); break;
            default: showHospitalAvailabilityMarkers(tabName);
          }
        }

        function showAllMarkers() {
          mapMarkers.forEach(function(marker) {
            marker.setVisible(true);
            marker.setIcon(getMarkerUrl(marker.customData.type === "hospital" ? MARKER_HOSPITAL_ICON : MARKER_LAB_ICON));
          });
        }

        function showHospitalAvailabilityMarkers(category) {
          mapMarkers.forEach(function(marker) {
            if (marker.customData.type === "hospital") {
              marker.setVisible(true);
              marker.setIcon(getMarkerUrl((marker.customData.info === undefined || marker.customData.info[category] === undefined) ? MARKER_UNKNOWN_ICON : (
                marker.customData.info[category] ? MARKER_AVAILABLE_ICON : MARKER_UNAVAILABLE_ICON)
              ));
            } else {
              marker.setVisible(false);
            }
          });
        }

        function showLabMarkers() {
          mapMarkers.forEach(function(marker) {
            if (marker.customData.type === "lab") {
              marker.setVisible(true);
              marker.setIcon(getMarkerUrl(MARKER_LAB_ICON));
            } else {
              marker.setVisible(false);
            }
          });
        }

        function onMarkerClick(event) {
          var marker = $(this).get(0);
          var map = marker.getMap();
          map.setZoom(15);
          map.setCenter(marker.getPosition());

          $(".info-ctr-title strong").text(marker.customData.type === "hospital" ? "Hospital Details" : "Lab Details");
          $(".info-name-link").text(marker.getTitle());
          $(".info-name-link").attr("href", getGoogleMapsLink(marker.getPosition().lat(), marker.getPosition().lng(), marker.customData.placeId));
          if (marker.customData.contact) {
            $(".info-contact-p").show();
            $(".info-contact-link").text(marker.customData.contact);
            $(".info-contact-link").attr("href", getPhoneNumberLink(marker.customData.contact));
          } else {
            $(".info-contact-p").hide();
          }
          
          $(".info-ctr").removeClass("d-none");
        }

        function addMarker(map, position, placeId, name, contact, type, meta) {
          var marker = new google.maps.Marker({
            map: map,
            position: position,
            title: name,
            customData: meta,
            icon: getMarkerUrl(type === "hospital" ? MARKER_HOSPITAL_ICON : MARKER_LAB_ICON)
          });
          mapMarkers.push(marker);
          marker.addListener("click", onMarkerClick);
        }

        function addCoordinates(geocoder, map, database, address, name, contact, type) {
          var coordinates = null;
          var marker = null;
          var fullAddress = name + ", " + address;
          var addressKey = getAddressKey(fullAddress);
          firebase.database().ref('coordinates/'+addressKey).once('value').then(function(snapshot) {
            if (snapshot.exists()) {
              var data = snapshot.val();
              var meta = {
                placeId: data.placeId,
                type: type,
                info: data.info,
                contact: contact
              }
              addMarker(map, {lat: Number(data.lat), lng: Number(data.lng)}, data.placeId, name, contact, type, meta);
            } else {
              geocoder.geocode( { 'address': fullAddress}, function(results, status) {
                if (status === 'OK') {
                  console.log("Updating database with geocoded result");
                  firebase.database().ref('coordinates/'+addressKey).set({
                    lat: String(results[0].geometry.location.lat()),
                    lng: String(results[0].geometry.location.lng()),
                    placeId: String(results[0].place_id)
                  });

                  console.log("Adding geocoded result as marker to map");
                  var meta = {
                    placeId: results[0].place_id,
                    type: type,
                    info: {
                      ventilator: undefined,
                      icu: undefined,
                      hdu: undefined
                    },
                    contact: contact
                  };
                  addMarker(map, results[0].geometry.location, results[0].place_id, name, contact, type, meta);
                } else {
                  console.error("Geocode was not successful for the following reason: " + status);
                }
              });
            }
          });
        }

        function initMapForCity(cityName) {
          $.get("https://sheets.googleapis.com/v4/spreadsheets/{{{googleSheets.spreadsheetId}}}?key={{{googleCloud.apiKey}}}&includeGridData=true", function (spreadheet) {
            spreadheet.sheets.forEach(function(sheet) {
              if (sheet.properties.title === cityName) {
                var cityCenter = { // defaults for Bangalore
                  lat: 12.9539974,
                  lng: 77.6309395
                };
                var map = new google.maps.Map(document.getElementById("map"), {
                  zoom: 11,
                  center: cityCenter,
                  disableDefaultUI: true
                });
                var geocoder = new google.maps.Geocoder();
                var database = firebase.database();
                sheet.data.forEach(function(gridData) {
                  gridData.rowData.forEach(function(row, index) {
                    if (index < 2) { // header and blank line in spreadsheet
                      return;
                    }

                    try {
                      var name = row.values[0].effectiveValue ? row.values[0].effectiveValue.stringValue : "";
                      var address = row.values[1].effectiveValue ? row.values[1].effectiveValue.stringValue : "";
                      var contact = row.values[2].effectiveValue ? row.values[2].effectiveValue.stringValue : "";
                      var type = row.values[3].effectiveValue ? row.values[3].effectiveValue.stringValue : "hospital";
                      addCoordinates(geocoder, map, database, address, name, contact, type);
                      
                      console.log(name + " " + address + " " + contact + " " + type);
                    } catch(err) {
                      console.error(err);
                    }
                  });
                });
              }
            });
          });
        }

        function onMapAPILoaded() {
          reloadUI();
          isMapAPILoaded = true;
        }
        
        exports.onMapAPILoaded = onMapAPILoaded;
      })((this.window = this.window || {}));
    </script>
  </head>
  <body>
    {{> header}}
    {{> home-screen}}
    {{> update-screen}}
    {{> city-screen}}
    {{> footer}}
  </body>
</html>