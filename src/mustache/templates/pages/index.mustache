<!DOCTYPE html>
<html class="no-focus-outline">
  <head>
    <meta charset="utf-8">
    <title>Covid Hospital Map</title>
    {{#ogtags}}
    {{> ogtags}}
    {{/ogtags}}
    {{#favicons}}
    {{> favicons}}
    {{/favicons}}
    {{#fonts}}
    {{> fonts}}
    {{/fonts}}
    {{#gtag}}
    {{> gtag}}
    {{/gtag}}
    {{#pixel}}
    {{> pixel}}
    {{/pixel}}
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="css/main.css">

    <script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
    <script src="https://code.jquery.com/jquery-3.5.1.min.js" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
    <script
      src="https://maps.googleapis.com/maps/api/js?key={{{googleCloud.apiKey}}}&callback=initMap&libraries=&v=weekly"
      defer
    ></script>
    <!-- The core Firebase JS SDK is always required and must be listed first -->
    <script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-database.js"></script>
    <script src="https://www.gstatic.com/firebasejs/7.15.5/firebase-analytics.js"></script>

    <script>
      // Your web app's Firebase configuration
      var firebaseConfig = {
        apiKey: "{{{firebase.apiKey}}}",
        authDomain: "{{{firebase.authDomain}}}",
        databaseURL: "{{{firebase.databaseURL}}}",
        projectId: "{{{firebase.projectId}}}",
        storageBucket: "{{{firebase.storageBucket}}}",
        messagingSenderId: "{{{firebase.messagingSenderId}}}",
        appId: "{{{firebase.appId}}}",
        measurementId: "{{{firebase.measurementId}}}"
      };
      // Initialize Firebase
      firebase.initializeApp(firebaseConfig);
      firebase.analytics();
    </script>
    <style type="text/css">
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }

      /* Optional: Makes the sample page fill the window. */
      html,
      body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
    <script>
      (function(exports) {
        "use strict";

        function getAddressKey(address) {
          address = address.replace(' ', '');
          [" ", "\\.", "#", "\\$", "\\[", "\\]", "/", "\\\\"].forEach(function(invalidCharacter) {
            var re = new RegExp(invalidCharacter, "g");
            address = address.replace(re, '');
          });
          return address;
        }

        function addCoordinates(geocoder, map, database, hospitalAddress, hospitalName) {
          var coordinates = null;
          var marker = null;
          var addressKey = getAddressKey(hospitalAddress);
          firebase.database().ref('coordinates/'+addressKey).once('value').then(function(snapshot) {
            if (snapshot.exists()) {
              var coordinates = snapshot.val();
              marker = new google.maps.Marker({
                map: map,
                position: {lat: Number(coordinates.lat), lng: Number(coordinates.long)},
                title: hospitalName 
              });
            } else {
              geocoder.geocode( { 'address': hospitalAddress}, function(results, status) {
                if (status === 'OK') {
                  console.log("Updating database with geocoded result");
                  firebase.database().ref('coordinates/'+addressKey).set({
                    lat: String(results[0].geometry.location.lat()),
                    long: String(results[0].geometry.location.lng())
                  });

                  console.log("Adding geocoded result as marker to map");
                  marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location,
                    title: hospitalName
                  });

                } else {
                  console.error("Geocode was not successful for the following reason: " + status);
                }
              });
            }
          });
        }

        function initMap() {
          var myLatLng = {
            lat: 12.9539974,
            lng: 77.6309395
          };
          var map = new google.maps.Map(document.getElementById("map"), {
            zoom: 11,
            center: myLatLng
          });
          var geocoder = new google.maps.Geocoder();
          var database = firebase.database();

          $.get("https://sheets.googleapis.com/v4/spreadsheets/{{{googleSheets.spreadsheetId}}}?key={{{googleCloud.apiKey}}}&includeGridData=true", function (spreadheet) {
            spreadheet.sheets.forEach(function(sheet) {
              if (sheet.properties.title !== "hospitals") {
                return;
              }
              sheet.data.forEach(function(gridData) {
                gridData.rowData.forEach(function(row, index) {
                  if (index < 2) { // header and blank line in spreadsheet
                    return;
                  }

                  try {
                    var hospitalName = row.values[0].effectiveValue ? row.values[0].effectiveValue.stringValue : "";
                    var hospitalAddress = row.values[1].effectiveValue ? row.values[1].effectiveValue.stringValue : "";
                    var hospitalContact = row.values[2].effectiveValue ? row.values[2].effectiveValue.stringValue : "";
                    var bescomContact = row.values[3].effectiveValue ? row.values[3].effectiveValue.stringValue : "";
                    var bwssbContact = row.values[4].effectiveValue ? row.values[4].effectiveValue.stringValue : "";
                    
                    var addCoordResult = addCoordinates(geocoder, map, database, hospitalAddress, hospitalName);
                    
                    console.log(hospitalName + " " + hospitalAddress + " " + hospitalContact + " " + bescomContact + " " + bwssbContact + " " + addCoordResult);
                  } catch(err) {
                    console.error(err);
                  }
                });
              });
            });
          });
        }

        exports.initMap = initMap;
      })((this.window = this.window || {}));
    </script>
  </head>
  <body>
    <div id="map"></div>
  </body>
</html>